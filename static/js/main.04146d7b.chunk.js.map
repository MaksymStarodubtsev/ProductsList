{"version":3,"sources":["components/ProductsList/ProductsList.jsx","components/CurrentProduct/CurrentProduct.jsx","App.jsx","index.js"],"names":["ProductsList","products","setselectedProductId","setProductInfo","setProductSelected","deleteProductFromList","commentsWithData","className","map","product","index","imageUrl","id","name","count","size","weight","comments","style","width","src","alt","height","type","onClick","CurrentProduct","addNewProductToList","productInfo","changeCurentProductsInList","useState","imageUrlEditingInfo","setImageUrlEditingInfo","idEditingInfo","setIdEditingInfo","nameEditingInfo","setNameEditingInfo","countEditingInfo","setCountEditingInfo","sizeWidthEditingInfo","setSizeWidthEditingInfo","sizeHeightEditingInfo","setSizeHeightEditingInfo","weightEditingInfo","setWeightEditingInfo","newProductToList","setNewProductToList","useEffect","undefined","onSubmit","event","preventDefault","required","onChange","target","value","placeholder","class","coment","description","date","App","setProducts","setComments","commentForProduct","setCommentsForProduct","selectedProductId","productSelected","getAllProducts","a","fetch","then","response","json","result","data","searchResult","getAllComments","Promise","all","console","log","productComments","filter","comment","productId","productsSortBy","sortBy","prevproducts","sort","prevProduct","nextProduct","localeCompare","role","prevListOfProduct","newProductInfo","prevProducts","length","productThatChange","productThatChangeId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04146d7b.chunk.js","sourcesContent":["import React from 'react';\nimport './ProductsList.scss';\n\nexport const ProductsList = (\n  {\n    products,\n    setselectedProductId,\n    setProductInfo,\n    setProductSelected,\n    commentsWithData,\n    deleteProductFromList\n  }) => (\n    <div>\n      <div>\n        <ul className=\"ProductsList__list\">\n          {products.map((product, index) => {\n            const {\n              imageUrl,\n              id,\n              name,\n              count,\n              size,\n              weight,\n              comments\n            } = product;\n\n            return (\n              <div className=\"ProductList__container d-flex flex-row flex-wrap\">\n                <div className=\"card\" style={{ width: '18rem' }}>\n                  <div className=\"ProductsList__photo-container\">\n                    <img src={imageUrl} className=\"card-img-top ProductsList__photo\" alt=\"\" />\n                  </div>\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">{name}</h5>\n                    <p className=\"card-text\">\n                      Product diccription\n                    </p>\n                  </div>\n                  <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\">Count: {count}</li>\n                    <li className=\"list-group-item\"> size: {`${size.width} x ${size.height}`}</li>\n                    <li className=\"list-group-item\">weight: {weight}</li>\n                  </ul>\n                  <div className=\"card-body d-flex justify-content-between\">\n                    <button\n                      className=\"btn btn-outline-primary\"\n                      type=\"button\"\n                      onClick={() => {\n                        setProductSelected(true);\n                        setselectedProductId(id);\n                        setProductInfo(product);\n                      }}\n                    >\n                      Edit &nbsp;{id}\n                    </button>\n                    <button\n                      className=\"btn btn-outline-danger\"\n                      type=\"button\"\n                      onClick={() => {\n                        deleteProductFromList(id);\n                      }}\n                    >\n                      Delete &nbsp;{id}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport './CurrentProduct.scss';\n\nexport const CurrentProduct = (\n  {\n    addNewProductToList,\n    productInfo,\n    comments,\n    changeCurentProductsInList,\n    setProductSelected,\n  },\n) => {\n  const { imageUrl, id, name, count, size, weight } = productInfo;\n\n  const [imageUrlEditingInfo, setImageUrlEditingInfo] = useState('');\n  const [idEditingInfo, setIdEditingInfo] = useState('');\n  const [nameEditingInfo, setNameEditingInfo] = useState('');\n  const [countEditingInfo, setCountEditingInfo] = useState('');\n\n  const [sizeWidthEditingInfo, setSizeWidthEditingInfo] = useState('');\n  const [sizeHeightEditingInfo, setSizeHeightEditingInfo] = useState('');\n\n  const [weightEditingInfo, setWeightEditingInfo] = useState('');\n\n  const [newProductToList, setNewProductToList] = useState({});\n\n  useEffect(() => {\n    setImageUrlEditingInfo(imageUrl);\n    setIdEditingInfo(id);\n    setNameEditingInfo(name);\n    setCountEditingInfo(count);\n\n    setSizeWidthEditingInfo(size.width);\n    setSizeHeightEditingInfo(size.height);\n\n    setWeightEditingInfo(weight);\n  }, [productInfo]);\n\n  useEffect(() => {\n    if (newProductToList.size !== undefined) {\n      changeCurentProductsInList(newProductToList, id);\n      setProductSelected(false);\n    }\n  }, [newProductToList]);\n\n  return (\n    <div className=\"ProductsList__card\">\n      <li className=\"ProductsList__item ProductsList__item--unchecked\">\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            setNewProductToList({\n              imageUrl: imageUrlEditingInfo,\n              id: idEditingInfo,\n              name: nameEditingInfo,\n              count: countEditingInfo,\n              size: {\n                width: sizeWidthEditingInfo,\n                height: sizeHeightEditingInfo,\n              },\n              weight: weightEditingInfo,\n            });\n          }}\n        >\n          <div className=\"\n            ProductList__container\n            d-flex\n            flex-row\n            flex-wrap\n            justify-content-center\"\n          >\n            <div className=\"card\" style={{ width: '18rem' }}>\n              <div className=\"ProductsList__photo-container\">\n                <img\n                  src={imageUrl}\n                  className=\"card-img-top ProductsList__photo\"\n                  alt={`Product-${name}`}\n                />\n              </div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">\n                  <input\n                    required\n                    className=\"form-control\"\n                    type=\"text\"\n                    onChange={event => setNameEditingInfo(event.target.value)}\n                    value={nameEditingInfo}\n                  />\n                </h5>\n                <p className=\"card-text\">\n                  Product description\n                </p>\n              </div>\n              <ul className=\"list-group list-group-flush align-items-end\">\n                <li className=\"input-group mb-3\">\n                  <span className=\"input-group-text\" id=\"basic-addon2\">url</span>\n                  <input\n                    required\n                    className=\"form-control\"\n                    type=\"text\"\n                    onChange={event => setImageUrlEditingInfo(event.target.value)\n                    }\n                    value={imageUrlEditingInfo}\n                  />\n                </li>\n                <li className=\"input-group mb-3\">\n                  <span className=\"input-group-text\" id=\"basic-addon2\">count</span>\n                  <input\n                    required\n                    className=\"form-control\"\n                    type=\"number\"\n                    onChange={event => setCountEditingInfo(event.target.value)\n                    }\n                    value={countEditingInfo}\n                  />\n                </li>\n                <li className=\"input-group mb-3\">\n                  <span className=\"input-group-text\" id=\"basic-addon2\">width</span>\n                  <input\n                    required\n                    className=\"form-control\"\n                    type=\"number\"\n                    placeholder=\"Width\"\n                    onChange={event => (\n                      setSizeWidthEditingInfo(event.target.value)\n                    )}\n                    value={sizeWidthEditingInfo}\n                  />\n                </li>\n                <li className=\"input-group mb-3\">\n                  <span class=\"input-group-text\" id=\"basic-addon2\">height</span>\n                  <input\n                    required\n                    className=\"form-control\"\n                    type=\"number\"\n                    placeholder=\"Height\"\n                    onChange={event => (\n                      setSizeHeightEditingInfo(event.target.value)\n                    )}\n                    value={sizeHeightEditingInfo}\n                  />\n                </li>\n                <li className=\"input-group mb-0 \">\n                  <span class=\"input-group-text\" id=\"basic-addon2\">weight</span>\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    onChange={event => setWeightEditingInfo(event.target.value)}\n                    value={weightEditingInfo}\n                  />\n                </li>\n              </ul>\n            </div>\n\n          </div>\n          <div className=\"CurrentProduct__user-button-container\">\n\n            <button\n              onClick={() => {\n                addNewProductToList({\n                  imageUrl: imageUrlEditingInfo,\n                  id: idEditingInfo,\n                  name: nameEditingInfo,\n                  count: countEditingInfo,\n                  size: {\n                    width: sizeWidthEditingInfo,\n                    height: sizeHeightEditingInfo,\n                  },\n                  weight: weightEditingInfo,\n                });\n                setProductSelected(false);\n              }}\n              className=\"\n              btn btn-outline-primary\n                \"\n              type=\"button\"\n            >\n              add\n            </button>\n\n            <button\n              className=\"\n              btn btn-outline-success\n                \"\n              type=\"submit\"\n            >\n              Change\n            </button>\n\n            <button\n              onClick={() => setProductSelected(false)}\n              className=\"\n              btn btn-outline-warning\"\n              type=\"button\"\n            >\n              Cancel\n            </button>\n\n          </div>\n        </form>\n      </li>\n\n      <div className=\"ProductsList__item ProductsList__item--checked\">\n        <div>\n          <h3>Comments</h3>\n          <ul>\n            { comments\n              ? (comments.map(coment => (\n                <li>\n                  {coment.description}\n                  :\n                  {coment.date}\n                </li>\n              )))\n              : 'no product selected'\n            }\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\nimport { ProductsList } from './components/ProductsList';\nimport { CurrentProduct } from './components/CurrentProduct';\n\nexport const App = () => {\n  const [products, setProducts] = useState('');\n  const [comments, setComments] = useState('');\n  const [productInfo, setProductInfo] = useState(null);\n  const [commentForProduct, setCommentsForProduct] = useState(null);\n  const [selectedProductId, setselectedProductId] = useState(0);\n  const [productSelected, setProductSelected] = useState(false);\n\n  const PRODUCT_URL = 'https://api.jsonbin.io/b/610e7a3ad5667e403a3af3c8/2';\n  const COMMENT_URL = 'https://api.jsonbin.io/b/610e7bd4e1b0604017a847b0';\n\n  const getAllProducts = async() => {\n    const searchResult = await fetch(PRODUCT_URL)\n      .then(response => response.json())\n      .then(result => result.data);\n\n    setProducts(searchResult);\n  };\n\n  const getAllComments = async() => {\n    const searchResult = await fetch(COMMENT_URL)\n      .then(response => response.json())\n      .then(result => result);\n\n    setComments(searchResult);\n  };\n\n  useEffect(() => {\n    Promise.all([\n      getAllProducts(),\n      getAllComments(),\n    ]);\n    console.log('mount', selectedProductId);\n\n    return () => {\n      console.log('Unmount');\n    };\n  }, []);\n\n  useEffect(() => {\n    if (comments) {\n      const productComments = comments.filter(comment => (\n        comment.productId === selectedProductId\n      ));\n\n      setCommentsForProduct(productComments);\n    }\n    console.log('update');\n  }, [products, selectedProductId]);\n\n  const productsSortBy = (sortBy) => {\n    setProducts(prevproducts => (\n      [...prevproducts].sort((prevProduct, nextProduct) => {\n        switch (sortBy) {\n          case 'name': {\n            return nextProduct.name.localeCompare(prevProduct.name);\n          }\n\n          case 'quantity': {\n            return prevProduct.count - nextProduct.count;\n          }\n\n          case 'reverse': {\n            return prevProduct.name.localeCompare(nextProduct.name);\n          }\n\n          default: {\n            return 0;\n          }\n        }\n      })));\n  };\n\n  const changeCurentProductsInList\n  = (productThatChange, productThatChangeId) => {\n    setProducts(prevproducts => (\n      [...prevproducts].map(product => {\n        if (product.id === productThatChangeId) {\n          productThatChange.comments = product.comments;\n          setselectedProductId(0);\n          return productThatChange;\n        }\n\n        return product;\n      })));\n  };\n\n  const addNewProductToList = (newProductInfo) => {\n    setProducts((prevProducts) => {\n      const id = prevProducts.length + 1;\n\n      newProductInfo.id = id;\n\n      return (\n        [...prevProducts, newProductInfo]\n      );\n    });\n  };\n\n  const deleteProductFromList = (productId) => {\n    setProducts(prevListOfProduct => (\n      [...prevListOfProduct].filter(product => product.id !== productId)\n    ));\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        { products\n          ? (\n            <div className=\"App__buttons-container\">\n              <button\n                className=\"btn btn-secondary\"\n                type=\"button\"\n                onClick={() => {\n                  productsSortBy('name');\n                }}\n              >\n                sort by name\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                type=\"button\"\n                onClick={() => {\n                  productsSortBy('quantity');\n                }}\n              >\n                sort by quantity\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                type=\"button\"\n                onClick={() => {\n                  productsSortBy('reverse');\n                }}\n              >\n                sort by name reverse\n              </button>\n            </div>\n          )\n          : (\n            <div\n              className=\"spinner-border text-primary\"\n              role=\"status\"\n            />\n          )\n        }\n        { products\n          ? (\n            <ProductsList\n              deleteProductFromList={deleteProductFromList}\n              setProductSelected={setProductSelected}\n              products={products}\n              setselectedProductId={setselectedProductId}\n              setProductInfo={setProductInfo}\n              commentsWithData={comments}\n            />\n          )\n          : '   Loading...'\n        }\n      </div>\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {\n            productSelected ? (\n              <CurrentProduct\n               addNewProductToList={addNewProductToList}\n                setProductSelected={setProductSelected}\n                changeCurentProductsInList={changeCurentProductsInList}\n                productInfo={productInfo}\n                comments={commentForProduct}\n              />\n            ) : 'No product selected'\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}