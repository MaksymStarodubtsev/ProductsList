{"version":3,"sources":["components/ProductsList/ProductsList.jsx","components/CurrentProduct/CurrentProduct.jsx","App.jsx","index.js"],"names":["ProductsList","products","setselectedProductId","setProductInfo","setProductSelected","commentsWithData","className","map","product","index","imageUrl","id","name","count","size","weight","comments","style","width","src","alt","height","type","onClick","CurrentProduct","productInfo","changeCurentProductsInList","useState","imageUrlEditingInfo","setImageUrlEditingInfo","idEditingInfo","setIdEditingInfo","nameEditingInfo","setNameEditingInfo","countEditingInfo","setCountEditingInfo","sizeWidthEditingInfo","setSizeWidthEditingInfo","sizeHeightEditingInfo","setSizeHeightEditingInfo","weightEditingInfo","setWeightEditingInfo","newProductToList","setNewProductToList","useEffect","undefined","onSubmit","event","preventDefault","required","onChange","target","value","placeholder","coment","description","date","App","setProducts","setComments","commentForProduct","setCommentsForProduct","selectedProductId","productSelected","getAllProducts","a","fetch","then","response","json","result","data","searchResult","getAllComments","Promise","all","console","log","productComments","filter","comment","productId","productsSortBy","sortBy","prevproducts","sort","prevProduct","nextProduct","localeCompare","role","productThatChange","productThatChangeId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.643b4d6b.chunk.js","sourcesContent":["import React from 'react';\nimport './ProductsList.scss';\n\nexport const ProductsList = ({ products, setselectedProductId, setProductInfo, setProductSelected, commentsWithData }) => (\n  <div>\n    <div>\n      <ul className=\"ProductsList__list\">\n        {products.map((product, index)=> {\n          const { imageUrl, id, name, count, size, weight, comments } = product;\n\n          return (\n            <div className=\"ProductList__container d-flex flex-row flex-wrap\">\n              <div className=\"card\" style={{ width: '18rem' }}>\n                <div className=\"ProductsList__photo-container\">\n                  <img src={imageUrl} className=\"card-img-top ProductsList__photo\" alt=\"\" />\n                </div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{name}</h5>\n                  <p className=\"card-text\">\n                    Some quick example text to build on the card title and make up\n                    the bulk of the card s content.\n                  </p>\n                </div>\n                <ul className=\"list-group list-group-flush\">\n                  <li className=\"list-group-item\">Count: {count}</li>\n                  <li className=\"list-group-item\"> size: {`${size.width} x ${size.height}`}</li>\n                  <li className=\"list-group-item\">weight: {weight}</li>\n                </ul>\n                <div className=\"card-body\">\n                  <button\n                    className=\"btn btn-outline-primary\"\n                    type=\"button\"\n                    onClick={() => {\n                      setProductSelected(true);\n                      setselectedProductId(id);\n                      setProductInfo(product);\n                    }}\n                  >\n                    Edit &nbsp;{id}\n                  </button>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport './CurrentProduct.scss';\n\nexport const CurrentProduct = (\n  {\n    productInfo,\n    comments,\n    changeCurentProductsInList,\n    setselectedProductId,\n    setProductSelected,\n  },\n) => {\n  const { imageUrl, id, name, count, size, weight } = productInfo;\n\n  const [imageUrlEditingInfo, setImageUrlEditingInfo] = useState('');\n  const [idEditingInfo, setIdEditingInfo] = useState('');\n  const [nameEditingInfo, setNameEditingInfo] = useState('');\n  const [countEditingInfo, setCountEditingInfo] = useState('');\n\n  const [sizeWidthEditingInfo, setSizeWidthEditingInfo] = useState('');\n  const [sizeHeightEditingInfo, setSizeHeightEditingInfo] = useState('');\n\n  const [weightEditingInfo, setWeightEditingInfo] = useState('');\n\n  const [newProductToList, setNewProductToList] = useState({});\n\n  useEffect(() => {\n    setImageUrlEditingInfo(imageUrl);\n    setIdEditingInfo(id);\n    setNameEditingInfo(name);\n    setCountEditingInfo(count);\n\n    setSizeWidthEditingInfo(size.width);\n    setSizeHeightEditingInfo(size.height);\n\n    setWeightEditingInfo(weight);\n  }, [productInfo]);\n\n  useEffect(() => {\n    if (newProductToList.size !== undefined) {\n      changeCurentProductsInList(newProductToList, id);\n    }\n  }, [newProductToList]);\n\n  return (\n    <div className=\"ProductsList__card\">\n      <li className=\"ProductsList__item ProductsList__item--unchecked\">\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            setNewProductToList({\n              imageUrl: imageUrlEditingInfo,\n              id: idEditingInfo,\n              name: nameEditingInfo,\n              count: countEditingInfo,\n              size: {\n                width: sizeWidthEditingInfo,\n                height: sizeHeightEditingInfo,\n              },\n              weight: weightEditingInfo,\n            });\n          }}\n        >\n          <div className=\"ProductList__container d-flex flex-row flex-wrap justify-content-center\">\n\n            <div className=\"card\" style={{ width: '18rem' }}>\n              <div className=\"ProductsList__photo-container\">\n                <img src={imageUrl} className=\"card-img-top ProductsList__photo\" alt=\"\" />\n              </div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">\n                  <input\n                    required\n                    className=\"form-control\"\n                    type=\"text\"\n                    onChange={(event) => setNameEditingInfo(event.target.value)}\n                    value={nameEditingInfo}\n                  />\n                </h5>\n                <p className=\"card-text\">\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card s content.\n                </p>\n              </div>\n              <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item\">\n                  <input\n                    required\n                    className=\"form-control\"\n                    type=\"number\"\n                    onChange={event => setCountEditingInfo(event.target.value)\n                    }\n                    value={countEditingInfo}\n                  />\n                </li>\n                <li className=\"list-group-item\">\n                  <input\n                    required\n                    className=\"form-control\"\n                    type=\"number\"\n                    placeholder=\"Width\"\n                    onChange={(event) => (\n                      setSizeWidthEditingInfo(event.target.value)\n                    )}\n                    value={sizeWidthEditingInfo}\n                  />\n                </li>\n                <li className=\"list-group-item\">\n                  <input\n                    required\n                    className=\"form-control\"\n                    type=\"number\"\n                    placeholder=\"Height\"\n                    onChange={(event) => (\n                      setSizeHeightEditingInfo(event.target.value)\n                    )}\n                    value={sizeHeightEditingInfo}\n                  />\n                </li>\n                <li className=\"list-group-item\">\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    onChange={(event) => setWeightEditingInfo(event.target.value)}\n                    value={weightEditingInfo}\n                  />\n                </li>\n                <li className=\"list-group-item\">A third item</li>\n              </ul>\n            </div>\n\n          </div>\n          <div className=\"CurrentProduct__user-button-container\">\n            <button\n              className=\"\n              btn btn-outline-success\n                \"\n              type=\"submit\"\n            >\n              Change\n            </button>\n\n            <button\n              onClick={() => setProductSelected(false)}\n              className=\"\n              btn btn-outline-warning\n                \"\n              type=\"button\"\n            >\n              Cancel\n            </button>\n\n          </div>\n        </form>\n      </li>\n\n      <div className=\"ProductsList__item ProductsList__item--checked\">\n        <div>\n          <h3>Comments</h3>\n          <ul>\n            {comments.map(coment => (\n              <li>{coment.description} : {coment.date }</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\nimport { ProductsList } from './components/ProductsList';\nimport { CurrentProduct } from './components/CurrentProduct';\n\nexport const App = () => {\n  const [products, setProducts] = useState('');\n  const [comments, setComments] = useState('');\n  const [productInfo, setProductInfo] = useState(null);\n  const [commentForProduct, setCommentsForProduct] = useState(null);\n  const [selectedProductId, setselectedProductId] = useState(0);\n  const [productSelected, setProductSelected] = useState(false);\n\n  const PRODUCT_URL = 'https://api.jsonbin.io/b/610e7a3ad5667e403a3af3c8/2';\n  const COMMENT_URL = 'https://api.jsonbin.io/b/610e7bd4e1b0604017a847b0';\n\n  const getAllProducts = async() => {\n    const searchResult = await fetch(PRODUCT_URL)\n      .then(response => response.json())\n      .then(result => result.data);\n\n    setProducts(searchResult);\n  };\n\n  const getAllComments = async() => {\n    const searchResult = await fetch(COMMENT_URL)\n      .then(response => response.json())\n      .then(result => result);\n\n    setComments(searchResult);\n  };\n\n  useEffect(() => {\n    Promise.all([\n      getAllProducts(),\n      getAllComments(),\n    ]);\n    console.log('mount', selectedProductId);\n\n    return () => {\n      console.log('Unmount');\n    };\n  }, []);\n\n  useEffect(() => {\n    if (comments) {\n      const productComments = comments.filter(comment => (\n        comment.productId === selectedProductId\n      ));\n\n      setCommentsForProduct(productComments);\n    }\n    console.log('update');\n  }, [products, selectedProductId]);\n\n  const productsSortBy = (sortBy) => {\n    setProducts(prevproducts => (\n      [...prevproducts].sort((prevProduct, nextProduct) => {\n        switch (sortBy) {\n          case 'name': {\n            return nextProduct.name.localeCompare(prevProduct.name);\n          }\n\n          case 'quantity': {\n            return prevProduct.count - nextProduct.count;\n          }\n\n          case 'reverse': {\n            return prevProduct.name.localeCompare(nextProduct.name);\n          }\n\n          default: {\n            return 0;\n          }\n        }\n      })));\n  };\n\n  const changeCurentProductsInList\n  = (productThatChange, productThatChangeId) => {\n    setProducts(prevproducts => (\n      [...prevproducts].map(product => {\n        if (product.id === productThatChangeId) {\n          productThatChange.comments = product.comments;\n          setselectedProductId(0);\n          return productThatChange;\n        }\n\n        return product;\n      })));\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        { products\n          ? (\n            <div className=\"App__buttons-container\">\n              <button\n                className=\"btn btn-secondary\"\n                type=\"button\"\n                onClick={() => {\n                  productsSortBy('name');\n                }}\n              >\n                sort by name\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                type=\"button\"\n                onClick={() => {\n                  productsSortBy('quantity');\n                }}\n              >\n                sort by quantity\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                type=\"button\"\n                onClick={() => {\n                  productsSortBy('reverse');\n                }}\n              >\n                sort by name reverse\n              </button>\n            </div>\n          )\n          : (\n            <div\n              className=\"spinner-border text-primary\"\n              role=\"status\"\n            />\n          )\n        }\n        { products\n          ? (\n            <ProductsList\n              setProductSelected={setProductSelected}\n              products={products}\n              setselectedProductId={setselectedProductId}\n              setProductInfo={setProductInfo}\n              commentsWithData={comments}\n            />\n          )\n          : '   Loading...'\n        }\n      </div>\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedProductId && productSelected && productInfo && commentForProduct ? (\n            <CurrentProduct\n              setProductSelected={setProductSelected}\n              changeCurentProductsInList={changeCurentProductsInList}\n              productInfo={productInfo}\n              comments={commentForProduct}\n            />\n          ) : 'No product selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}